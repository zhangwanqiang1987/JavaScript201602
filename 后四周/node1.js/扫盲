什么是服务器--->
能在特定服务器（IP）的特定端口上监听客户端发送的请求，比那个根据请求的路径返回相应的结果的都叫做服务器。
什么是客户端--->
只要能向特定服务器的特定端口发起请求并可以把服务器相应的内容（返回给我们的内容）接收的都是客户端。例如：百度网站的问价存放在百度的服务器上，我们每一个人通过浏览器访问URL地址，可以看到百度的网站，那么此时百度就是一个读取器（百度有自己专门的服务器机器），我们每一个人都是一个客户端（每个人的浏览器其实是客户端）


没一个URL地址都包括三部分：协议  域名（IP) 端口号


如果想做个个人博客，叫别人访问到，需要做：
1，买一台服务器（阿里云服务器），并且给服务器脸上网，只要连上网了服务器就会有个外网IP地址
2，买一个域名，给域名进行解析--->DHS解析（把我们的域名和服务器的外网IP关联到一起）
3，备案

当我在浏览器中输入一个域名，看到网站发生了什么？
1，把域名进行DNS解析，通过域名解析出对应的外网的IP地址和端口号
2，通过IP地址找到对应的服务器，在找到服务器上本端口对应的项目（一台服务器可以发布N多个项目，每个项目都有一个自己对应的端口，但是一般情况下服务器值有一 个外网IP地址，不同项目可能访问的是同一台服务器，我们可以通过端口号的不一样来区分不同的项目）
3，把 我们主页面（例如：index.html）里面的代码返回给客户端-->http传输（相当于一个快递公司，他的作用是把服务器的内容返回给客户端）
4，客户端接收到HHTML问价的内容后通过浏览器进行渲染；

-->首先加载和渲染的是HTML代码-->在加载HTML代码过程中遇到<link>需要先指定的服务器大宋一个新的请求，把对用的css文件中的美容也都是客户端进行渲染--><script src="xxx">/<img src="xxx">/<audio src="xxx">...这写和css一样都需要重新的想服务器发送请求，然后把文件中的内容返回给客户端进行渲染
-->服务器可以通过HTTP HTTPS FTP ...等传输协议把内容返回给客户端



什么是node.js
node.js是 javascript语言的服务器运行环境
-->js是一门全栈编程语言：我为么既可以用它编写客户端(js)，也可以使用它编写服务器端（node)
模块
-->具有特定功能的某个整体就是一个模块，在node中每一个js文件或是多个js文件都可以成为一个模块：
node当中模块的分类：
1，核心模块：node.js天生自带的模块--->http(创建和管理服务的),url(url地址解析的),fs(服务器文件读写的)....
2，文件模块：自己在node中写的（我们写的每一个JS都是一个模块，现在A模块中调用B模块中的方法）
3，第三方模块：别人写好饿，我想用，都可以称之为第三方模块
   npm 进行包（第三方模块）的管理
   npm install [包的名字]-->在当前安装目录创建了一个node_moules这样一个文件夹，我们的下载下来的文件都在这里，这个是局部安装，当前的项目才可以使用这个包文件
模块A和模块B之间一般不会冲突的-->把每一个模块用闭包包起来-->想在B模块中使用A模块中的方法，只需要在A中把一些给外面用的return出去就行

关于内置的模块和HTTP,URL,fs
导入三个node内置的模块
var http=require("http");//管理服务的
var url=require("url");//解析url地址的
var fs=require("fs");//文件读写的


http
//createServer:创建一个服务器的环境（server）
http.creataServer();